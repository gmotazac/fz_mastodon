#nginx:
#build: nginx/
#  ports:
      #- "80:80"
      #- "443:443"
elasticsearch:
  image: elasticsearch:2.4
  command: elasticsearch -Des.network.host=0.0.0.0
  ports:
    - "9200:9200"
    - "9300:9300"
logstash:
  build: logstash/
  command: logstash -f /etc/logstash/conf.d/logstash.conf
  volumes:
    - ./logstash/config:/etc/logstash/conf.d
  ports:
    - "12201:12201/udp"
    - "12202:12202/tcp"
  links:
    - elasticsearch
kibana:
  build: kibana/
  volumes:
    - ./kibana/config/:/opt/kibana/config/
  ports:
    - "5601:5601"
  links:
    - elasticsearch
postgres:
  restart: always
  image: postgres:alpine
  volumes:
     - ./postgres:/var/lib/postgresql/data
redis:
  restart: always
  image: redis:alpine
  volumes:
    - ./redis:/data
mastodon:
  image: gargron/mastodon
  restart: always
  env_file: .env.production
  command: bundle exec rails s -p 3000 -b '0.0.0.0'
  log_driver: "gelf"
  log_opt:
    gelf-address: "udp://localhost:12201"
    tag: mastodon
  ports:
      - "3000:3000"
  links:
      - postgres
      - redis
  volumes:
     - ./public/assets:/mastodon/public/assets
     - ./public/packs:/mastodon/public/packs
     - ./public/system:/mastodon/public/system
npmmastodon:
  image: gargron/mastodon
  restart: always
  env_file: .env.production
  command: npm run start
  log_driver: "gelf"
  log_opt:
    gelf-address: "udp://localhost:12201"
    tag: mastodon_npm
  ports:
    - "4000:4000"
  links:
    - postgres
    - redis
sidekiq_mastodon:
  image: gargron/mastodon
  restart: always
  env_file: .env.production
  command: bundle exec sidekiq -q default -q mailers -q pull -q push
  links:
    - postgres
    - redis
  volumes:
    - ./public/system:/mastodon/public/system
telegraf:
  image: telegraf:1.3.0
  volumes:
    - ./tick_stack/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  links:
    - influxdb
  ports:
    - "8092:8092/udp"
    - "8094:8094"
    - "8125:8125/udp"
# Define an InfluxDB service
influxdb:
  image: influxdb:1.2.4
  volumes:
    - ./tick_stack/influxdb:/var/lib/influxdb
  ports:
    - "8086:8086"
# Define a Chronograf service
chronograf:
  image: chronograf:1.3
  environment:
    INFLUXDB_URL: http://influxdb:8086
    KAPACITOR_URL: http://kapacitor:9092
  ports:
    - "8888:8888"
  links:
    - influxdb
    - kapacitor
# Define a Kapacitor service
kapacitor:
  image: kapacitor:1.3.0
  environment:
    KAPACITOR_HOSTNAME: kapacitor
    KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
  links:
    - influxdb
  ports:
    - "9092:9092"
# Define a service for using the influx CLI tool.
# docker-compose run influxdb-cli
influxdb-cli:
  image: influxdb:1.2.4
  entrypoint:
    - influx
    - -host
    - influxdb
  links:
    - influxdb
# Define a service for using the kapacitor CLI tool.
# docker-compose run kapacitor-cli
kapacitor-cli:
  image: kapacitor:1.2.1
  entrypoint: bash
  environment:
    KAPACITOR_URL: http://kapacitor:9092
  links:
    - kapacitor
